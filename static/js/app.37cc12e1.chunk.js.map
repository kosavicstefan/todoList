{"version":3,"sources":["accessories/Title.tsx","database/AppDataSource.tsx","database/entities/Task.tsx","App.tsx","navigation/TabNavigator.tsx","navigation/MainStackNavigator.tsx","HomeScreen/HomeScreen.tsx","components/FlowerList.tsx","components/Flower.tsx","DetailsScreen.tsx","ColorScreen/ColorScreen.tsx","TodoScreen/TodoList.tsx","database/entities/User.tsx","components/NewNotifications.js"],"names":["content","style","styles","container","title","StyleSheet","create","padding","margin","borderWidth","borderColor","textAlign","backgroundColor","width","alignItems","color","fontSize","AppDataSourceOptions","type","database","driver","SQLite","synchronize","entities","User","Task","AppDataSource","DataSource","Entity","PrimaryGeneratedColumn","Column","useEffect","isInitialized","console","log","initialize","err","initDatabase","NavigationContainer","Tab","createBottomTabNavigator","Navigator","screenOptions","headerShown","Screen","name","component","ColorStackNavigator","options","tabBarLabel","tabBarIcon","size","Ionicons","MainStackNavigator","TodoListNavigator","NewNotificationsNavigator","Stack","createNativeStackNavigator","HomeScreen","DetailsScreen","ColorScreen","TodoList","NewNotifications","Dimensions","get","height","navigation","route","testID","list","borderRadius","display","useState","flowersList","setFlowersList","fetch","then","response","json","data","message","getData","renderItem","item","props","length","keyExtractor","DUMMY_DOG_NAMES","image","dogName","useNavigation","onPress","navigate","source","uri","Math","floor","random","flex","justifyContent","params","container_first","container_second","container_third","first","flexDirection","first_1","flexGrow","first_2","second","second_1","second_2","second_2_button","second_3","third","third_1","third_2","third_3","third_4","fourth","fourth_1","fourth_2","fourth_3","fifth","fifth_1","fifth_2","fifth_3","text","todoList","setTodoList","inputValue","setInputValue","findTask","taskObject","manager","find","addTask","taskRepository","getRepository","newTask","task","save","alert","deleteTask","taskId","delete","background","LinearGradient","colors","inputFormContainer","input","placeholder","placeholderTextColor","onChangeText","value","submitButton","scrollViewContainer","tasks","map","todoText","taskText","id","deleteButton","fontWeight","marginTop","marginLeft","marginBottom","elevation","borderBottomEndRadius","borderBottomLeftRadius","paddingTop","setExpoPushToken","notification","setNotification","notificationListener","useRef","responseListener","registerForPushNotificationsAsync","token","current","Notifications","addNotificationReceivedListener","addNotificationResponseReceivedListener","removeNotificationSubscription","request","body","JSON","stringify","schedulePushNotification","scheduleNotificationAsync","trigger","seconds","Platform","OS","setNotificationChannelAsync","importance","AndroidImportance","MAX","vibrationPattern","lightColor","Device","isDevice","existingStatus","getPermissionsAsync","status","finalStatus","requestPermissionsAsync","getExpoPushTokenAsync","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge"],"mappings":"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","file":"static/js/app.37cc12e1.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { ITitle } from \"../interface\";\n\n//Kako postaviti ovaj content da ne bude any type vec da bude onaj tip koji se salje iz parent componente?\nfunction Title({ content }: any) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{content}</Text>\n    </View>\n  );\n}\n\nexport default Title;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    margin: 10,\n    borderWidth: 1,\n    borderColor: \"black\",\n    textAlign: \"center\",\n    backgroundColor: \"#F4A460\",\n    width: 340,\n    alignItems: \"center\",\n  },\n  title: {\n    color: \"white\",\n    fontSize: 24,\n  },\n});\n","import \"reflect-metadata\"\nimport * as SQLite from 'expo-sqlite'\nimport { DataSource, DataSourceOptions } from \"typeorm/browser\"\n\n//Entities\nimport Task from \"./entities/Task\"\nimport User from \"./entities/User\"\n\n\nexport const AppDataSourceOptions: DataSourceOptions = {\n    type: 'expo',\n    database: 'todo.db',\n    driver: SQLite,\n    synchronize: true,\n    entities: [User, Task]\n}\n\n\nexport const AppDataSource = new DataSource(AppDataSourceOptions)\n","import { Column, PrimaryGeneratedColumn, Entity } from 'typeorm';\n\n@Entity()\nclass Task {\n    @PrimaryGeneratedColumn('increment')\n    id: number\n\n    @Column({ type: 'text' })\n    task: string\n}\n\nexport default Task\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* import { EntitySchema } from \"typeorm\";   STARI NACIN KREIRANJA TABELE\n\nexport interface ITask {\n    id: number\n    text: string\n}\n\nconst Task = new EntitySchema<ITask>({\n    name: \"Task\", // Entity name (your \"Model\")\n    tableName: \"tasks\", // database table\n    columns: {\n        id: {\n            primary: true, // primary key\n            type: \"int\",\n            generated: true, // auto-generated\n        },\n        text: {\n            type: \"varchar\",\n        }\n    },\n});\n\nexport default Task; */","// In App.js in a new project\nimport \"react-native-gesture-handler\";\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./HomeScreen/HomeScreen\";\nimport DetailsScreen from \"./DetailsScreen\";\nimport { MainStackNavigator } from \"./navigation/MainStackNavigator\";\nimport BottomTabNavigator from \"./navigation/TabNavigator\";\nimport 'reflect-metadata';\nimport { AppDataSource } from \"./database/AppDataSource\";\n\nimport { useEffect, useState } from \"react\";\n\n\nfunction App() {\n\n  useEffect(() => {\n    const initDatabase = async () => {\n      if (!AppDataSource.isInitialized) {\n        try {\n          try {\n            await AppDataSource.initialize();\n            return console.log(\"Database initialization SUCESS\");\n          } catch (err) {\n            return console.log(\"Database initialization FAILED\", err);\n          }\n        } finally { }\n      } else {\n        console.log(\"Database initialization ALREADY\")\n      }\n    }\n    initDatabase()\n  }, [])\n\n  return (\n    <NavigationContainer>\n      <BottomTabNavigator />\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n\nimport {\n  MainStackNavigator,\n  ColorStackNavigator,\n  TodoListNavigator,\n  NewNotificationsNavigator,\n} from \"./MainStackNavigator\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomTabNavigator = () => {\n  return (\n    <Tab.Navigator screenOptions={{ headerShown: false }}>\n      <Tab.Screen\n        name=\"Colors\"\n        component={ColorStackNavigator}\n        options={{\n          tabBarLabel: \"Colors\",\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name=\"aperture-outline\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Home\"\n        component={MainStackNavigator}\n        options={{\n          tabBarLabel: \"Home\",\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name=\"home\" color={color} size={size} />\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"TodoList\"\n        component={TodoListNavigator}\n        options={{\n          tabBarLabel: \"TodoList\",\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name=\"list-outline\" color={color} size={size} />\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"NewNotifications\"\n        component={NewNotificationsNavigator}\n        options={{\n          tabBarLabel: \"Notifications\",\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name=\"notifications-outline\" color={color} size={size} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default BottomTabNavigator;\n","import React from \"react\";\nimport { createStackNavigator, Header } from \"@react-navigation/stack\";\n\nimport HomeScreen from \"../HomeScreen/HomeScreen\";\nimport DetailsScreen from \"../DetailsScreen\";\nimport ColorScreen from \"../ColorScreen/ColorScreen\";\nimport TodoList from \"../TodoScreen/TodoList\"\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport NewNotifications from \"../components/NewNotifications\";\n\ntype RootStackParamList = {\n  Home: { image: string };\n  Details: { image: string };\n  Colors: undefined;\n  TodoList: undefined;\n  NewNotifications: undefined\n};\n\ndeclare global {\n  namespace ReactNavigation {\n    interface RootParamList extends RootStackParamList { }\n  }\n}\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst MainStackNavigator = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\n      <Stack.Screen name=\"Details\" component={DetailsScreen} />\n    </Stack.Navigator>\n  );\n};\n\nconst ColorStackNavigator = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Colors\" component={ColorScreen} />\n    </Stack.Navigator>\n  );\n};\n\nconst TodoListNavigator = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"TodoList\" component={TodoList} />\n    </Stack.Navigator>\n  );\n};\n\nconst NewNotificationsNavigator = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"NewNotifications\" component={NewNotifications} />\n    </Stack.Navigator>\n  );\n};\n\nexport { MainStackNavigator, ColorStackNavigator, TodoListNavigator, NewNotificationsNavigator };\n","import * as React from \"react\";\nimport { View, Text, Button, StyleSheet, Dimensions } from \"react-native\";\nimport { INavigation } from \"../interface\";\nimport FlowerList from \"../components/FlowerList\";\nimport Title from \"../accessories/Title\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nfunction HomeScreen({ navigation, route }: INavigation) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.title} testID=\"titleHome\">\n        <Title content={\"Dog album\"} />\n      </View>\n      <View style={styles.list}>\n        <FlowerList />\n      </View>\n      {/* <View style={styles.list}>\n          <FlowerList/>\n        </View> */}\n    </View>\n  );\n}\n\nexport default HomeScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: 1,\n    borderRadius: 10,\n    margin: 10,\n    padding: 5,\n    height: \"auto\",\n    backgroundColor: \"#FFDAB9\",\n  },\n  title: {},\n  list: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n","import { StyleSheet, View, Text, Pressable, FlatList } from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport Flower from \"./Flower\";\nimport { useState, useEffect } from \"react\";\nimport { IFlower } from \"../interface\";\nimport axios from \"axios\";\n\nexport default function FlowerList() {\n  const [flowersList, setFlowersList] = useState<any>([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      fetch(\"https://dog.ceo/api/breeds/image/random/3\")\n        .then((response) => response.json())\n        .then((data) => setFlowersList(data.message));\n    };\n    getData();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <FlatList\n          data={flowersList}\n          renderItem={({ item }) => <Flower props={item} key={item.length} />}\n          keyExtractor={(item) => item}\n        />\n      </View>\n    </View>\n  );\n}\n//<Flower {...flower} key={flower.id}/>\nconst styles = StyleSheet.create({\n  container: {\n    margin: 10,\n  },\n});\n","import {\n  StyleSheet,\n  View,\n  Image,\n  TouchableOpacity,\n  Text,\n  Button,\n} from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst DUMMY_DOG_NAMES = [\n  \"Rex\",\n  \"Zoe\",\n  \"Nasus\",\n  \"Aatrox\",\n  \"Viego\",\n  \"Yone\",\n  \"Lulu\",\n  \"Soraka\",\n  \"Sona\",\n  \"Azir\",\n  \"Malzahar\",\n];\n\nconst Flower = (props: any) => {\n  const navigation = useNavigation();\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Details\", { image: props.props });\n      }}\n    >\n      <View style={null}>\n        <Image style={styles.image} source={{ uri: props.props }} />\n        <Text style={styles.dogName} testID='dogNames'>\n          {\" \"}\n          {\n            DUMMY_DOG_NAMES[Math.floor(Math.random() * DUMMY_DOG_NAMES.length)]\n          }{\" \"}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    borderWidth: 1,\n    borderColor: \"black\",\n    width: 200,\n    margin: 10,\n    height: 140,\n    borderRadius: 10,\n  },\n  dogName: {\n    padding: 5,\n    margin: 5,\n    backgroundColor: \"white\",\n    textAlign: \"center\",\n    borderWidth: 1,\n    borderRadius: 10,\n  },\n});\n\nexport default Flower;\n","import * as React from \"react\";\nimport { View, Text, Button, Image } from \"react-native\";\nimport Title from \"./accessories/Title\";\nimport { INavigation } from \"./interface\";\n\ninterface IDetailsScreen {\n  id: number;\n  text: string;\n}\n\nfunction DetailsScreen({ navigation, route }: INavigation) {\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#FFDAB9\",\n      }}\n    >\n      <Title content={\"Dog details\"} />\n      <Image\n        style={{\n          width: 300,\n          height: 300,\n          margin: 10,\n          borderRadius: 10,\n          borderWidth: 1,\n        }}\n        source={{ uri: route.params.image }}\n      />\n      {/* <Button\n      title='Go to home'\n      onPress={()=>navigation.navigate('Home')}\n      />\n      <Button\n      title='Go back'\n      onPress={()=>navigation.goBack()}\n      />\n      <Button\n      title='Go to first'\n      onPress={()=>navigation.popToTop()}\n      /> */}\n    </View>\n  );\n}\n\nexport default DetailsScreen;\n","import * as React from \"react\";\nimport { View, StyleSheet, Image, Text, TouchableOpacity } from \"react-native\";\nimport { INavigation } from \"../interface\";\nimport { IImage } from \"../interface\";\n\nfunction ColorScreen({ navigation, route }: INavigation) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.container_first}>\n        <View style={styles.first}>\n          <View style={styles.first_1}></View>\n          <View style={styles.first_2}></View>\n        </View>\n        <View style={styles.second}>\n          <View style={styles.second_1}></View>\n          <View style={styles.second_2}></View>\n          <View style={styles.second_3}></View>\n        </View>\n        <View style={styles.third}>\n          <View style={styles.third_1}></View>\n          <View style={styles.third_2}></View>\n          <View style={styles.third_3}></View>\n          <View style={styles.third_4}></View>\n        </View>\n        <View style={styles.fourth}>\n          <View style={styles.fourth_1}></View>\n          <View style={styles.fourth_2}></View>\n          <View style={styles.fourth_3}></View>\n        </View>\n        <View style={styles.fifth}>\n          <View style={styles.fifth_1}></View>\n          <View style={styles.fifth_2}></View>\n          <View style={styles.fifth_3}></View>\n        </View>\n      </View>\n\n      <View style={styles.container_second}>\n        <Image\n          style={styles.image}\n          source={{\n            uri: \"https://www.valens.dev/images/valens-logo-og.jpg\" as any,\n          }}\n        />\n      </View>\n\n      <View style={styles.container_first}>\n        <View style={styles.first}>\n          <View style={styles.first_1}></View>\n          <View style={styles.first_2}></View>\n        </View>\n        <View style={styles.second}>\n          <View style={styles.second_1}></View>\n          <TouchableOpacity\n            testID=\"buttonStart\"\n            onPress={() => navigation.navigate(\"Home\")}\n            style={styles.second_2_button}\n          >\n            <View>\n              <Text style={styles.text}>Start!</Text>\n            </View>\n          </TouchableOpacity>\n          <View style={styles.second_3}></View>\n        </View>\n        <View style={styles.third}>\n          <View style={styles.third_1}></View>\n          <View style={styles.third_2}></View>\n          <View style={styles.third_3}></View>\n          <View style={styles.third_4}></View>\n        </View>\n        <View style={styles.fourth}>\n          <View style={styles.fourth_1}></View>\n          <View style={styles.fourth_2}></View>\n          <View style={styles.fourth_3}></View>\n        </View>\n        <View style={styles.fifth}>\n          <View style={styles.fifth_1}></View>\n          <View style={styles.fifth_2}></View>\n          <View style={styles.fifth_3}></View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  container_first: {\n    display: \"flex\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n  },\n  container_second: {\n    display: \"flex\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n  },\n  container_third: {\n    display: \"flex\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n  },\n  first: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n  },\n  first_1: {\n    display: \"flex\",\n    flexGrow: 2,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#3CB371\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  first_2: {\n    display: \"flex\",\n    borderWidth: 0.5,\n    flexGrow: 3,\n    borderColor: \"black\",\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#90EE90\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  second: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  second_1: {\n    display: \"flex\",\n    flexGrow: 1,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#2E8B57\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  second_2: {\n    display: \"flex\",\n    flexGrow: 3,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#90EE90\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  second_2_button: {\n    display: \"flex\",\n    flexGrow: 3,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#90EE90\",\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  second_3: {\n    display: \"flex\",\n    flexGrow: 1,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#66CDAA\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  third: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  third_1: {\n    display: \"flex\",\n    flexGrow: 1,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#90EE90\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  third_2: {\n    display: \"flex\",\n    flexGrow: 1,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#66CDAA\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  third_3: {\n    display: \"flex\",\n    flexGrow: 2,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#2E8B57\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  third_4: {\n    display: \"flex\",\n    flexGrow: 1,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#90EE90\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  fourth: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  fourth_1: {\n    display: \"flex\",\n    flexGrow: 3,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#3CB371\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  fourth_2: {\n    display: \"flex\",\n    flexGrow: 1,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#66CDAA\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  fourth_3: {\n    display: \"flex\",\n    flexGrow: 1,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#3CB371\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  fifth: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  fifth_1: {\n    display: \"flex\",\n    flexGrow: 2,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#66CDAA\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  fifth_2: {\n    display: \"flex\",\n    flexGrow: 1,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#90EE90\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  fifth_3: {\n    display: \"flex\",\n    flexGrow: 2,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    flex: 1,\n    textAlign: \"center\",\n    margin: 1,\n    backgroundColor: \"#2E8B57\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  text: {\n    fontSize: 22,\n  },\n});\n\nexport default ColorScreen;\n","import * as React from \"react\";\nimport { View, Text, Button, StyleSheet, Dimensions, TouchableOpacity, TextInput, ScrollView } from \"react-native\";\nimport { INavigation } from \"../interface\";\nimport { useState, useEffect } from \"react\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\n//Database\nimport { AppDataSource } from \"../database/AppDataSource\";\nimport Task from \"../database/entities/Task\";\n\nexport default function TodoList() {\n\n  const [todoList, setTodoList] = useState<Array<Task>>([])\n  const [newTask, setNewTask] = useState<Task>()\n  const [inputValue, setInputValue] = useState<string>()\n\n  useEffect(() => {\n    findTask()\n  }, [todoList])\n\n  const findTask = async () => {\n    const taskObject = await AppDataSource.manager.find(Task)\n    setTodoList(taskObject)\n  }\n\n  const addTask = async () => {\n    const taskRepository = AppDataSource.getRepository(Task)\n    const newTask = new Task()\n    newTask.task = inputValue //ovdje ide vrijednost iz inputa\n    await taskRepository.save(newTask)\n    if (!inputValue) {\n      alert(\"Pogresan unos\")\n    }\n    else {\n      setTodoList([...todoList, newTask])\n      setInputValue('')\n    }\n  }\n\n  const deleteTask = async (taskId: number) => {\n    const taskRepository = AppDataSource.getRepository(Task);\n    await taskRepository.delete(taskId);\n    const taskObject = await AppDataSource.manager.find(Task)\n    setTodoList(taskObject)\n  }\n\n  return (\n    <View style={styles.background}>\n      <ScrollView>\n        <LinearGradient\n          // Background Linear Gradient\n          colors={['#c89bff', '#d7cdf5']}>\n          <View style={styles.inputFormContainer}>\n            <View>\n              <Text style={styles.title}>TaskList</Text>\n              <TextInput\n                style={styles.input}\n                placeholder=\"Add task\"\n                placeholderTextColor={'gray'}\n                testID='inputForm'\n                onChangeText={setInputValue}\n                value={inputValue}\n              />\n              <View style={styles.submitButton}>\n                <Button title=\"Add task\" color={'#9c00fe'} onPress={addTask} />\n              </View>\n            </View>\n          </View>\n        </LinearGradient>\n        <LinearGradient\n          // Background Linear Gradient\n          colors={['#a38dfe', '#8ad9ff']}>\n          <View style={styles.scrollViewContainer}>\n            <View>\n              <Text style={styles.tasks}>Tasks</Text>\n            </View>\n            <View>\n              {todoList.map((task) => {\n                return (\n                  <View key={task.id} style={styles.list}>\n                    <View style={styles.todoText}>\n                      <Text style={styles.taskText}>{task.task}</Text>\n                    </View>\n                    <View>\n                      <TouchableOpacity\n                        onPress={() => deleteTask(task.id)}\n                        style={styles.deleteButton}>\n                        <Text style={{ color: 'white' }}>X</Text>\n                      </TouchableOpacity>\n\n                    </View>\n\n                  </View>\n\n                );\n              })}\n            </View>\n          </View>\n        </LinearGradient>\n      </ScrollView>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  background: {\n    backgroundColor: '#a38dfe'\n  },\n  taskText: {\n    color: '#9133bb',\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginTop: 10,\n    marginLeft: 10\n  },\n  tasks: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: \"left\",\n    marginBottom: 10,\n    marginLeft: 15,\n    fontWeight: 'bold',\n  },\n  input: {\n    padding: 5,\n    margin: 10,\n    marginLeft: 40,\n    width: '80%',\n    textAlign: 'center',\n    borderWidth: 1,\n    borderColor: 'gray',\n    fontSize: 16,\n    borderRadius: 10,\n    backgroundColor: 'white'\n  },\n  submitButton: {\n    width: '80%',\n    marginLeft: 40,\n    marginBottom: 30,\n    marginTop: 10\n  },\n  title: {\n    padding: 5,\n    margin: 8,\n    textAlign: 'left',\n    fontSize: 24,\n    color: 'white',\n    fontWeight: 'bold',\n\n  },\n  list: {\n    textAlign: 'center',\n    margin: 12,\n    padding: 20,\n    fontSize: 18,\n    borderWidth: 0.5,\n    borderColor: 'black',\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'row',\n    borderRadius: 20,\n    elevation: 3\n  },\n  inputFormContainer: {\n    borderBottomEndRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderColor: 'black',\n    //borderWidth: 1,\n\n  },\n  scrollViewContainer: {\n    marginTop: 20,\n    paddingTop: 10\n\n  },\n  todoText: {\n    flexGrow: 12,\n    margin: 2,\n    width: '60%',\n    fontSize: 20,\n\n  },\n  deleteButton: {\n    width: 42,\n    height: 42,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    borderRadius: 50,\n    backgroundColor: 'red',\n    marginTop: 5,\n    borderWidth: 0.5\n  }\n});\n","import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nclass User {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ type: 'text' })\n    name: string;\n}\n\nexport default User","import * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Text, View, Button, Platform } from 'react-native';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nexport default function NewNotifications() {\n  const [expoPushToken, setExpoPushToken] = useState('');\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  useEffect(() => {\n    registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\n\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n      setNotification(notification);\n    });\n\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n      console.log(response);\n    });\n\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'space-around',\n      }}>\n      {/* <Text>Your expo push token: {expoPushToken}</Text> */}\n      <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n        <Text>Title: {notification && notification.request.content.title} </Text>\n        <Text>Body: {notification && notification.request.content.body}</Text>\n        <Text>Data: {notification && JSON.stringify(notification.request.content.data)}</Text>\n      </View>\n      <Button\n        title=\"New Notification\"\n        onPress={async () => {\n          await schedulePushNotification();\n        }}\n      />\n    </View>\n  );\n}\n\nasync function schedulePushNotification() {\n  await Notifications.scheduleNotificationAsync({\n    content: {\n      title: \"You have new notification\",\n      body: 'RADEEEE NOTIFIKACIJE!',\n      data: { data: 'ovjde idu neki podaci' },\n    },\n    trigger: { seconds: 3 },\n  });\n}\n\nasync function registerForPushNotificationsAsync() {\n  let token;\n\n  if (Platform.OS === 'android') {\n    await Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n    alert('Must use physical device for Push Notifications');\n  }\n\n  return token;\n}"],"sourceRoot":""}